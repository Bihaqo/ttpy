!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module tt2 ! in 
    interface  ! in :tt2
        module tt2 ! in :tt2:tt2.f90
            real(kind=8), allocatable,dimension(:) :: core
            type unknown_type ! in :tt2:tt2.f90:tt2
                double precision, pointer,optional,dimension(:) :: p=>null()
            end type unknown_type
            subroutine full_to_tt(a,asize,n,d,eps,r) ! in :tt2:tt2.f90:tt2
                use matrix_util
                real(kind=8) dimension(asize),intent(inout) :: a
                integer, optional,intent(in),check(len(a)>=asize),depend(a) :: asize=len(a)
                integer dimension(d),intent(in) :: n
                integer, optional,intent(in),check(len(n)>=d),depend(n) :: d=len(n)
                real(kind=8) intent(in) :: eps
                integer dimension(d + 1),intent(out),depend(d) :: r
            end subroutine full_to_tt
            subroutine tt_dealloc ! in :tt2:tt2.f90:tt2
            end subroutine tt_dealloc
            subroutine tt_to_full(n,r,d,cr,crsize,a,asize) ! in :tt2:tt2.f90:tt2
                use matrix_util
                integer dimension(d),intent(in) :: n
                integer dimension(d + 1),intent(in),depend(d) :: r
                integer, optional,intent(in),check(len(n)>=d),depend(n) :: d=len(n)
                double precision dimension(crsize),intent(in) :: cr
                integer, optional,intent(in),check(len(cr)>=crsize),depend(cr) :: crsize=len(cr)
                double precision dimension(asize),intent(out),depend(asize) :: a
                integer intent(in) :: asize
            end subroutine tt_to_full
            subroutine tt_add(n,d,r1,r2,ps1,ps2,core1,core2,rres,psres) ! in :tt2:tt2.f90:tt2
                integer dimension(d),intent(in) :: n
                integer, optional,intent(in),check(len(n)>=d),depend(n) :: d=len(n)
                integer dimension(d + 1),intent(in),depend(d) :: r1
                integer dimension(d + 1),intent(in),depend(d) :: r2
                integer dimension(d + 1),intent(in),depend(d) :: ps1
                integer dimension(d + 1),intent(in),depend(d) :: ps2
                real(kind=8) dimension(:),intent(in) :: core1
                real(kind=8) dimension(:),intent(in) :: core2
                integer dimension(d + 1),intent(out),depend(d) :: rres
                integer dimension(d + 1),intent(out),depend(d) :: psres
            end subroutine tt_add
            subroutine tt_compr2(n,d,r,ps,cr,eps) ! in :tt2:tt2.f90:tt2
                integer dimension(d),intent(in) :: n
                integer, optional,intent(in),check(len(n)>=d),depend(n) :: d=len(n)
                integer dimension(d + 1),intent(inout),depend(d) :: r
                integer dimension(d + 1),intent(inout),depend(d) :: ps
                real(kind=8) dimension(:),intent(in) :: cr
                real(kind=8) intent(in) :: eps
            end subroutine tt_compr2
            subroutine tt_norm(n,d,r,ps,cr,nrm) ! in :tt2:tt2.f90:tt2
                integer dimension(d),intent(in) :: n
                integer, optional,intent(in),check(len(n)>=d),depend(n) :: d=len(n)
                integer dimension(d + 1),intent(in),depend(d) :: r
                integer dimension(d + 1),intent(in),depend(d) :: ps
                real(kind=8) dimension(:),intent(in) :: cr
                real(kind=8) intent(out) :: nrm
            end subroutine tt_norm
            subroutine tt_hdm(n,d,r1,r2,ps1,ps2,core1,core2,rres,psres) ! in :tt2:tt2.f90:tt2
                integer dimension(d),intent(in) :: n
                integer, optional,intent(in),check(len(n)>=d),depend(n) :: d=len(n)
                integer dimension(d + 1),intent(in),depend(d) :: r1
                integer dimension(d + 1),intent(in),depend(d) :: r2
                integer dimension(d + 1),intent(in),depend(d) :: ps1
                integer dimension(d + 1),intent(in),depend(d) :: ps2
                real(kind=8) dimension(:),intent(in) :: core1
                real(kind=8) dimension(:),intent(in) :: core2
                integer dimension(d + 1),intent(out),depend(d) :: rres
                integer dimension(d + 1),intent(out),depend(d) :: psres
            end subroutine tt_hdm
        end module tt2
    end interface 
end python module tt2

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
